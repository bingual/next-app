generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")
    // directUrl = env("DIRECT_URL")
}

enum Provider {
    Credentials
    kakao
    naver
}

model User {
    idx         Int       @id @default(autoincrement())
    username    String    @unique
    password    String
    name        String?
    nickname    String?
    avatar      String?
    provider    Provider  @default(Credentials)
    login_level Int       @default(1)
    created_at  DateTime  @default(dbgenerated("NOW()")) @db.DateTime
    updated_at  DateTime  @default(dbgenerated("NOW() ON UPDATE NOW()")) @db.DateTime
    posts       Post[]    @relation("user:posts")
    comments    Comment[] @relation("user:comment")
}

model Post {
    idx         Int       @id @default(autoincrement())
    author      String
    state       Int       @default(1)
    title       String
    content     String    @db.LongText
    views       Int       @default(0)
    recommended Int       @default(0)
    published   Boolean   @default(true)
    created_at  DateTime  @default(dbgenerated("NOW()")) @db.DateTime
    updated_at  DateTime  @default(dbgenerated("NOW() ON UPDATE NOW()")) @db.DateTime
    user        User      @relation("user:posts", fields: [author], references: [username], onDelete: Cascade)
    comments    Comment[] @relation("post:comment")
}

model Comment {
    idx        Int      @id @default(autoincrement())
    post_id    Int
    author     String
    content    String   @db.LongText
    published  Boolean  @default(true)
    created_at DateTime @default(dbgenerated("NOW()")) @db.DateTime
    updated_at DateTime @default(dbgenerated("NOW() ON UPDATE NOW()")) @db.DateTime
    user       User     @relation("user:comment", fields: [author], references: [username], onDelete: Cascade)
    post       Post     @relation("post:comment", fields: [post_id], references: [idx], onDelete: Cascade)
}
